{"version":3,"sources":["components/orderBook/reducer.js","reducers/index.js","components/orderBook/actions.js","components/orderBook/index.js","App.js","serviceWorker.js","index.js","store/index.js"],"names":["DEFAULT","hasErrored","isLoading","hasFetched","price","open","volume","asks","bids","combineReducers","orderbook","state","action","type","data","console","log","response","slice","changes","forEach","change","i","saleType","size","updateArr","index","findIndex","order","parseFloat","splice","open_24h","volume_24h","toFixed","bool","Orderbook","props","midpointRef","React","createRef","renderHeaderBottom","debounce","leading","maxWait","renderOrdersContainer","hasScrolled","this","connectToSocket","length","current","scrollIntoView","block","setState","orders","map","className","key","id","ref","calcPriceChange","perc","prefix","renderOrders","limitOrders","reverse","renderOrdersMidpoint","amount","Component","connect","dispatch","socket","WebSocket","addEventListener","event","JSON","parse","socketUpdate","send","stringify","product_ids","channels","info","App","Boolean","window","location","hostname","match","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4QAAMA,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAY,EACZC,MAAO,GACPC,KAAM,GACNC,OAAQ,GACRC,KAAM,GACNC,KAAM,ICLOC,cAAgB,CAAEC,UDQlB,WAAmC,IAA1BC,EAAyB,uDAAjBX,EAASY,EAAQ,uCAC/C,OAAQA,EAAOC,MACb,IAAK,wBACH,OAAO,eACFF,EADL,CAEEV,WAAYW,EAAOX,aAGvB,IAAK,uBACH,OAAO,eACFU,EADL,CAEET,UAAWU,EAAOV,YAGtB,IAAK,wBACH,OAAO,eACFS,EADL,CAEER,WAAYS,EAAOT,aAGvB,IAAK,sBACH,OAAQS,EAAOE,KAAKD,MAClB,IAAK,WAOH,OANAE,QAAQC,IAAI,sBACZD,QAAQC,IAAI,iCACZD,QAAQC,IAAI,sBACZD,QAAQC,IAAI,QAAZ,YAAyBJ,EAAOE,KAAKG,SAASV,KAAKW,MAAM,EAAG,MAC5DH,QAAQC,IAAI,QAAZ,YAAyBJ,EAAOE,KAAKG,SAAST,KAAKU,MAAM,EAAG,MAErD,eACFP,EADL,CAEEJ,KAAK,YAAKK,EAAOE,KAAKG,SAASV,MAC/BC,KAAK,YAAKI,EAAOE,KAAKG,SAAST,QAGnC,IAAK,WAoDH,OAnDAI,EAAOE,KAAKG,SAASE,QAAQC,SAAQ,SAACC,EAAQC,GAAO,IAAD,cACpBD,EADoB,GAC7CE,EAD6C,KACnCnB,EADmC,KAC5BoB,EAD4B,KAI9CC,EAAS,YAAOd,EAAMJ,MACT,QAAbgB,IACFE,EAAS,YAAOd,EAAMH,OAGxB,IAAMkB,EAAQD,EAAUE,WAAU,SAAAC,GAChC,MAAiB,QAAbL,EACKM,WAAWD,EAAM,KAAOC,WAAWzB,GAErCyB,WAAWD,EAAM,KAAOC,WAAWzB,MAG5CW,QAAQC,IAAI,sBACZD,QAAQC,IAAI,iCACZD,QAAQC,IAAI,sBACZD,QAAQC,IAAI,YAAaO,GACzBR,QAAQC,IAAI,SAAUZ,GACtBW,QAAQC,IAAI,QAASQ,GACrBT,QAAQC,IAAIS,EAAUC,IAIpBD,EAAUC,IACVG,WAAWJ,EAAUC,GAAO,MAAQG,WAAWzB,GAG3CyB,WAAWL,GAAQ,EACrBC,EAAUC,GAAO,GAAKF,EAGtBC,EAAUK,OAAOJ,EAAO,GAKtBG,WAAWL,GAAQ,GACrBC,EAAUK,OAAOJ,EAAO,EAAG,CAACtB,EAAOoB,IAIvCb,EAAK,eACAA,EADA,CAEHJ,KAAmB,QAAbgB,EAAqBE,EAAYd,EAAMJ,KAC7CC,KAAmB,QAAbe,EAAqBE,EAAYd,EAAMH,UAI1CG,EAET,IAAK,SAQH,OAPAI,QAAQC,IAAI,sBACZD,QAAQC,IAAI,+BACZD,QAAQC,IAAI,sBACZD,QAAQC,IAAI,SAAUJ,EAAOE,KAAKG,SAASb,OAC3CW,QAAQC,IAAI,QAASJ,EAAOE,KAAKG,SAASc,UAC1ChB,QAAQC,IAAI,UAAWJ,EAAOE,KAAKG,SAASe,YAErC,eACFrB,EADL,CAEEP,MAAOyB,WAAWjB,EAAOE,KAAKG,SAASb,OAAO6B,QAAQ,GACtD5B,KAAMwB,WAAWjB,EAAOE,KAAKG,SAASc,UAAUE,QAAQ,GACxD3B,OAAQuB,WAAWjB,EAAOE,KAAKG,SAASe,YAAYC,QAAQ,KAGhE,QACE,OAAOtB,EAGb,QACE,OAAOA,M,4DEjHN,SAAST,EAAUgC,GACxB,MAAO,CACLrB,KAAM,uBACNX,UAAWgC,G,ICHTC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,YAAcC,IAAMC,YACzB,EAAKC,mBAAqBC,mBAAS,EAAKD,mBAAoB,IAAK,CAC/DE,SAAS,EACTC,QAAS,MAEX,EAAKC,sBAAwBH,mBAAS,EAAKG,sBAAuB,IAAK,CACrEF,SAAS,EACTC,QAAS,MAGX,EAAKhC,MAAQ,CACXkC,aAAa,GAdE,E,iFAmBjBC,KAAKV,MAAMW,oB,gDAGaX,GACnBU,KAAKnC,MAAMkC,aACVC,KAAKV,MAAM7B,KAAKyC,OAAS,GAAKF,KAAKV,MAAM5B,KAAKwC,OAAS,GACrDF,KAAKT,YAAYY,UACnBH,KAAKT,YAAYY,QAAQC,eAAe,CAAEC,MAAO,WACjDL,KAAKM,SAAS,CAAEP,aAAa,O,mCAMxBQ,GACX,OACE,6BACGA,EAAOC,KAAI,SAAC1B,EAAOF,GAAR,OACV,yBAAK6B,UAAU,wBAAwBC,IAAK9B,GAC1C,yBAAK6B,UAAU,WACb,yBAAKA,UAAU,UAAU1B,WAAWD,EAAM,IAAIK,QAAQ,IACtD,yBAAKsB,UAAU,UACb,0BAAMA,UAAU,SAAS1B,WAAWD,EAAM,IAAIK,QAAQ,KAExD,yBAAKsB,UAAU,UAAf,gB,6CASV,OACE,yBACEE,GAAG,gBACHC,IAAKZ,KAAKT,YACVkB,UAAU,yBAEV,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UAAf,mBACA,yBAAKA,UAAU,UACb,0BAAMA,UAAU,SAAST,KAAKV,MAAMhC,OAAc,IAClD,0BAAMmD,UAAU,cAAcT,KAAKa,oBAErC,yBAAKJ,UAAU,UAAf,Y,wCAON,IAAMK,EAAOd,KAAKV,MAAMhC,MAAQ0C,KAAKV,MAAM/B,KAAO,EAC5CkD,EAAYK,GAAQ,EAAI,cAAgB,YACxCC,EAASD,GAAQ,EAAI,IAAM,GACjC,OACE,0BAAML,UAAWA,GACdM,GACQ,IAAPD,GAAY3B,QAAQ,GAFxB,O,4CAOkBL,GACpB,OAAIkB,KAAKV,MAAMnC,WAEX,yBAAKsD,UAAU,WAAf,gDAMCT,KAAKV,MAAMjC,YAAc2C,KAAKV,MAAMlC,UAChC,yBAAKqD,UAAU,aAAf,iBAIP,6BACE,yBAAKA,UAAU,QACZT,KAAKgB,aAAahB,KAAKiB,YAAYjB,KAAKV,MAAM7B,KAAM,IAAIyD,YAE1DlB,KAAKmB,uBACN,yBAAKV,UAAU,QACZT,KAAKgB,aAAahB,KAAKiB,YAAYjB,KAAKV,MAAM5B,KAAM,S,kCAMjD6C,EAAQa,GAClB,OAAO,YAAIb,EAAOnC,MAAM,EAAGgD,M,2CAI3B,OAAIpB,KAAKV,MAAMnC,WAEX,yBAAKsD,UAAU,WAAf,+CAKCT,KAAKV,MAAMjC,aAAc2C,KAAKV,MAAMlC,WAAc4C,KAAKV,MAAMhC,MAIhE,6BACE,0BAAMmD,UAAU,QAAQT,KAAKV,MAAMhC,MAAnC,QAAqD,IACrD,0BAAMmD,UAAU,aAAhB,oBACA,0BAAMA,UAAU,QAAQT,KAAKa,mBAA0B,IACvD,0BAAMJ,UAAU,aAAhB,aACA,0BAAMA,UAAU,QAAQT,KAAKV,MAAM9B,OAAnC,QAAsD,IACtD,0BAAMiD,UAAU,aAAhB,eATK,yBAAKA,UAAU,aAAf,mB,+BAeT,OACE,yBAAKA,UAAU,aACb,4BAAQA,UAAU,qBAChB,yBAAKA,UAAU,0BACb,0BAAMA,UAAU,WAAhB,mBAEF,yBAAKA,UAAU,6BACZT,KAAKN,uBAGV,yBAAKe,UAAU,mBACb,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,WAAhB,eAEF,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,0BAAMA,UAAU,WAAhB,gBAEF,yBAAKA,UAAU,UACb,0BAAMA,UAAU,WAAhB,gBAEF,yBAAKA,UAAU,UACb,0BAAMA,UAAU,WAAhB,WAIN,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,kCACZT,KAAKF,gC,GAtKIuB,aAkMTC,eAnBS,SAAAzD,GACtB,MAAO,CACLT,UAAWS,EAAMD,UAAUR,UAC3BD,WAAYU,EAAMD,UAAUT,WAC5BE,WAAYQ,EAAMD,UAAUP,WAC5BC,MAAOO,EAAMD,UAAUN,MACvBC,KAAMM,EAAMD,UAAUL,KACtBC,OAAQK,EAAMD,UAAUJ,OACxBC,KAAMI,EAAMD,UAAUH,KACtBC,KAAMG,EAAMD,UAAUF,SAIC,SAAA6D,GACzB,MAAO,CACLtB,gBAAiB,kBAAMsB,GDzKlB,SAAAA,GACLA,EAASnE,GAAU,IAEnB,IAAMoE,EAAS,IAAIC,UAAU,kCAe7BD,EAAOE,iBAAiB,WAbL,SAAAC,GACjBJ,EAASnE,GAAU,IACnBmE,EArBG,CACLxD,KAAM,wBACNV,YAmBsB,IAEpB,IAAMW,EAAO4D,KAAKC,MAAMF,EAAM3D,MAC9BuD,EAlBC,SAAsBvD,GAC3B,MAAO,CACLD,KAAM,sBACNC,KAAMA,GAgBF8D,CAAa,CACX/D,KAAMC,EAAKD,KACXI,SAAUH,QAOhBwD,EAAOE,iBAAiB,QAAQ,WAC9BF,EAAOO,KACLH,KAAKI,UAAU,CACbjE,KAAM,YACNkE,YAAa,CAAC,WACdC,SAAU,CAAC,SAAU,gBAK3BV,EAAOE,iBAAiB,SAAS,WAC/BzD,QAAQkE,KAAK,2BACbZ,EA3DG,CACLxD,KAAM,wBACNZ,YAyDsB,cC6IXmE,CAA6CjC,GC5L7C+C,E,iLARX,OACE,yBAAK3B,UAAU,OACb,kBAAC,EAAD,W,GAJUY,aCSEgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTN,ICLoC5E,EDK9B6E,ECJGC,YAAYC,EAAU/E,EAAOgF,YAAgBC,MDMtDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzF,QAAQyF,MAAMA,EAAMC,c","file":"static/js/main.01ebe030.chunk.js","sourcesContent":["const DEFAULT = {\n  hasErrored: false,\n  isLoading: false,\n  hasFetched: false,\n  price: \"\",\n  open: \"\",\n  volume: \"\",\n  asks: [],\n  bids: []\n};\n\nexport default function(state = DEFAULT, action) {\n  switch (action.type) {\n    case \"ORDERBOOK_HAS_ERRORED\":\n      return {\n        ...state,\n        hasErrored: action.hasErrored\n      };\n\n    case \"ORDERBOOK_IS_LOADING\":\n      return {\n        ...state,\n        isLoading: action.isLoading\n      };\n\n    case \"ORDERBOOK_HAS_FETCHED\":\n      return {\n        ...state,\n        hasFetched: action.hasFetched\n      };\n\n    case \"ORDERBOOK_WS_UPDATE\":\n      switch (action.data.type) {\n        case \"snapshot\":\n          console.log(\"------------------\");\n          console.log(\"ORDERBOOK_WS_UPDATE: snapshot\");\n          console.log(\"------------------\");\n          console.log(\"asks:\", [...action.data.response.asks.slice(0, 10)]);\n          console.log(\"bids:\", [...action.data.response.bids.slice(0, 10)]);\n\n          return {\n            ...state,\n            asks: [...action.data.response.asks],\n            bids: [...action.data.response.bids]\n          };\n\n        case \"l2update\":\n          action.data.response.changes.forEach((change, i) => {\n            let [saleType, price, size] = change;\n\n            // Inherit previous state\n            let updateArr = [...state.asks];\n            if (saleType === \"buy\") {\n              updateArr = [...state.bids];\n            }\n\n            const index = updateArr.findIndex(order => {\n              if (saleType === \"buy\") {\n                return parseFloat(order[0]) <= parseFloat(price);\n              }\n              return parseFloat(order[0]) >= parseFloat(price);\n            });\n\n            console.log(\"------------------\");\n            console.log(\"ORDERBOOK_WS_UPDATE: l2update\");\n            console.log(\"------------------\");\n            console.log(\"saleType:\", saleType);\n            console.log(\"price:\", price);\n            console.log(\"size:\", size);\n            console.log(updateArr[index]);\n\n            // If order is found in array, then update size or remove it\n            if (\n              updateArr[index] &&\n              parseFloat(updateArr[index][0]) === parseFloat(price)\n            ) {\n              // If size is not zero, then update size since its changed\n              if (parseFloat(size) > 0) {\n                updateArr[index][1] = size;\n                // If update size is zero then just remove order node\n              } else {\n                updateArr.splice(index, 1);\n              }\n              // If no index is found then we need to add it\n            } else {\n              // Size should be great than zero but just in case\n              if (parseFloat(size) > 0) {\n                updateArr.splice(index, 0, [price, size]);\n              }\n            }\n\n            state = {\n              ...state,\n              asks: saleType !== \"buy\" ? updateArr : state.asks,\n              bids: saleType === \"buy\" ? updateArr : state.bids\n            };\n          });\n\n          return state;\n\n        case \"ticker\":\n          console.log(\"------------------\");\n          console.log(\"ORDERBOOK_WS_UPDATE: ticker\");\n          console.log(\"------------------\");\n          console.log(\"price:\", action.data.response.price);\n          console.log(\"open:\", action.data.response.open_24h);\n          console.log(\"volume:\", action.data.response.volume_24h);\n\n          return {\n            ...state,\n            price: parseFloat(action.data.response.price).toFixed(2),\n            open: parseFloat(action.data.response.open_24h).toFixed(2),\n            volume: parseFloat(action.data.response.volume_24h).toFixed(2)\n          };\n\n        default:\n          return state;\n      }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport orderbookReducer from \"../components/orderBook/reducer\";\n\nexport default combineReducers({ orderbook: orderbookReducer });\n","export function hasErrored(bool) {\n  return {\n    type: \"ORDERBOOK_HAS_ERRORED\",\n    hasErrored: bool\n  };\n}\n\nexport function isLoading(bool) {\n  return {\n    type: \"ORDERBOOK_IS_LOADING\",\n    isLoading: bool\n  };\n}\nexport function hasFetched(bool) {\n  return {\n    type: \"ORDERBOOK_HAS_FETCHED\",\n    hasFetched: bool\n  };\n}\n\nexport function socketUpdate(data) {\n  return {\n    type: \"ORDERBOOK_WS_UPDATE\",\n    data: data\n  };\n}\n\nexport function connectToSocket() {\n  return dispatch => {\n    dispatch(isLoading(true));\n\n    const socket = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n\n    const handleData = event => {\n      dispatch(isLoading(false));\n      dispatch(hasFetched(true));\n\n      const data = JSON.parse(event.data);\n      dispatch(\n        socketUpdate({\n          type: data.type,\n          response: data\n        })\n      );\n    };\n\n    socket.addEventListener(\"message\", handleData);\n\n    socket.addEventListener(\"open\", () => {\n      socket.send(\n        JSON.stringify({\n          type: \"subscribe\",\n          product_ids: [\"ETH-USD\"],\n          channels: [\"level2\", \"ticker\"]\n        })\n      );\n    });\n\n    socket.addEventListener(\"close\", () => {\n      console.info(\"WebSocket disconnected.\");\n      dispatch(hasErrored(true));\n    });\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { debounce } from \"lodash\";\n\nimport \"../../styles/Orderbook.scss\";\nimport { connectToSocket } from \"./actions\";\n\nclass Orderbook extends Component {\n  constructor(props) {\n    super(props);\n\n    this.midpointRef = React.createRef();\n    this.renderHeaderBottom = debounce(this.renderHeaderBottom, 100, {\n      leading: true,\n      maxWait: 100\n    });\n    this.renderOrdersContainer = debounce(this.renderOrdersContainer, 100, {\n      leading: true,\n      maxWait: 100\n    });\n\n    this.state = {\n      hasScrolled: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.connectToSocket();\n  }\n\n  componentWillReceiveProps(props) {\n    if (!this.state.hasScrolled) {\n      if (this.props.asks.length > 0 && this.props.bids.length > 0) {\n        if (this.midpointRef.current) {\n          this.midpointRef.current.scrollIntoView({ block: \"center\" });\n          this.setState({ hasScrolled: true });\n        }\n      }\n    }\n  }\n\n  renderOrders(orders) {\n    return (\n      <div>\n        {orders.map((order, index) => (\n          <div className=\"Orderbook__book__item\" key={index}>\n            <div className=\"columns\">\n              <div className=\"column\">{parseFloat(order[1]).toFixed(4)}</div>\n              <div className=\"column\">\n                <span className=\"price\">{parseFloat(order[0]).toFixed(2)}</span>\n              </div>\n              <div className=\"column\">&nbsp;</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  renderOrdersMidpoint() {\n    return (\n      <div\n        id=\"midpointPrice\"\n        ref={this.midpointRef}\n        className=\"Orderbook__book__item\"\n      >\n        <div className=\"columns\">\n          <div className=\"column\">Midpoint Price:</div>\n          <div className=\"column\">\n            <span className=\"price\">{this.props.price}</span>{\" \"}\n            <span className=\"percentage\">{this.calcPriceChange()}</span>\n          </div>\n          <div className=\"column\">&nbsp;</div>\n        </div>\n      </div>\n    );\n  }\n\n  calcPriceChange() {\n    const perc = this.props.price / this.props.open - 1;\n    const className = perc >= 0 ? \"color-green\" : \"color-red\";\n    const prefix = perc >= 0 ? \"+\" : \"\";\n    return (\n      <span className={className}>\n        {prefix}\n        {(perc * 100).toFixed(2)}&#37;\n      </span>\n    );\n  }\n\n  renderOrdersContainer(order) {\n    if (this.props.hasErrored) {\n      return (\n        <div className=\"error--\">\n          Sorry! There was an error loading the items\n        </div>\n      );\n    }\n\n    if (!this.props.hasFetched || this.props.isLoading) {\n      return <div className=\"loading--\">Loading…</div>;\n    }\n\n    return (\n      <div>\n        <div className=\"asks\">\n          {this.renderOrders(this.limitOrders(this.props.asks, 50).reverse())}\n        </div>\n        {this.renderOrdersMidpoint()}\n        <div className=\"bids\">\n          {this.renderOrders(this.limitOrders(this.props.bids, 50))}\n        </div>\n      </div>\n    );\n  }\n\n  limitOrders(orders, amount) {\n    return [...orders.slice(0, amount)];\n  }\n\n  renderHeaderBottom() {\n    if (this.props.hasErrored) {\n      return (\n        <div className=\"error--\">\n          Sorry! There was an error loading the items\n        </div>\n      );\n    }\n    if (!this.props.hasFetched || this.props.isLoading || !this.props.price) {\n      return <div className=\"loading--\">Loading…</div>;\n    }\n    return (\n      <div>\n        <span className=\"bold\">{this.props.price} USD</span>{\" \"}\n        <span className=\"help-text\">Last trade price</span>\n        <span className=\"bold\">{this.calcPriceChange()}</span>{\" \"}\n        <span className=\"help-text\">24h price</span>\n        <span className=\"bold\">{this.props.volume} ETH</span>{\" \"}\n        <span className=\"help-text\">24h volume</span>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Orderbook\">\n        <header className=\"Orderbook__header\">\n          <div className=\"Orderbook__header__top\">\n            <span className=\"heading\">Ethereum (ETH)</span>\n          </div>\n          <div className=\"Orderbook__header__bottom\">\n            {this.renderHeaderBottom()}\n          </div>\n        </header>\n        <div className=\"Orderbook__book\">\n          <div className=\"Orderbook__book__header\">\n            <span className=\"heading\">Order Book</span>\n          </div>\n          <div className=\"Orderbook__book__subheader\">\n            <div className=\"columns\">\n              <div className=\"column\">\n                <span className=\"heading\">Market Size</span>\n              </div>\n              <div className=\"column\">\n                <span className=\"heading\">Price (USD)</span>\n              </div>\n              <div className=\"column\">\n                <span className=\"heading\">&nbsp;</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"Orderbook__book__content\">\n            <div className=\"Orderbook__book__content-inner\">\n              {this.renderOrdersContainer()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.orderbook.isLoading,\n    hasErrored: state.orderbook.hasErrored,\n    hasFetched: state.orderbook.hasFetched,\n    price: state.orderbook.price,\n    open: state.orderbook.open,\n    volume: state.orderbook.volume,\n    asks: state.orderbook.asks,\n    bids: state.orderbook.bids\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    connectToSocket: () => dispatch(connectToSocket())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orderbook);\n","import React, { Component } from \"react\";\nimport OrderBook from \"./components/orderBook\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <OrderBook />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport configStore from \"./store/index\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"../reducers/index\";\n\nexport default function configStore(state) {\n  return createStore(reducers, state, applyMiddleware(thunk));\n}\n"],"sourceRoot":""}